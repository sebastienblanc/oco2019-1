/*
 * Copyright 2019 JF James.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.sebjef.easypay.control;

import org.sebjef.easypay.entity.PaymentResponseCode;
import java.time.LocalDateTime;
import java.util.Optional;
import org.sebjef.easypay.entity.ProcessingMode;
import org.sebjef.easypay.boundary.PaymentRequest;
import org.sebjef.easypay.boundary.PaymentResponse;
import org.sebjef.easypay.entity.CardType;

/**
 *
 * @author JF James
 */
public class PaymentProcessingContext {

    // Data coming from the request
    private final String posId;
    private final String cardNumber;
    private final String expiryDate;
    private final int amount;

    // Data generated by the processing
    private long id;
    private PaymentResponseCode responseCode;
    private CardType cardType;
    private ProcessingMode processingMode;
    private long responseTime;
    private LocalDateTime dateTime;
    private boolean bankCalled;
    private boolean authorized;
    private Optional<Long> authorId;

    // Initializes the processing context from the request
    public PaymentProcessingContext(PaymentRequest request) {
        this.posId = request.getPosId();
        this.dateTime = LocalDateTime.now();
        this.responseTime = System.currentTimeMillis();
        this.cardNumber = request.getCardNumber();
        this.expiryDate = request.getExpiryDate();
        this.amount = request.getAmount();

        // Default values
        this.responseCode = PaymentResponseCode.ACCEPTED;
        this.processingMode = ProcessingMode.STANDARD;
        this.authorized = false;
        this.bankCalled = false;
        this.authorId = Optional.empty();
    }

    // Generates the response from the processing context
    public PaymentResponse generateResponse() {
        PaymentResponse response = new PaymentResponse();

        response.setPaymentId(id);
        response.setAmount(amount);
        response.setCardNumber(cardNumber);
        response.setCardType(cardType);
        response.setExpiryDate(expiryDate);
        response.setPosId(posId);
        response.setResponseCode(responseCode);
        response.setBankCalled(bankCalled);
        response.setAuthorized(authorized);

            response.setAuthorId(authorId);
        
        response.setResponseTime(responseTime);
        response.setProcessingMode(processingMode);

        return response;
    }

    public String getPosId() {
        return posId;
    }

    public String getCardNumber() {
        return cardNumber;
    }

    public String getExpiryDate() {
        return expiryDate;
    }

    public int getAmount() {
        return amount;
    }

    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public PaymentResponseCode getResponseCode() {
        return responseCode;
    }

    public void setResponseCode(PaymentResponseCode responseCode) {
        this.responseCode = responseCode;
    }

    public CardType getCardType() {
        return cardType;
    }

    public void setCardType(CardType cardType) {
        this.cardType = cardType;
    }

    public ProcessingMode getProcessingMode() {
        return processingMode;
    }

    public void setProcessingMode(ProcessingMode processingMode) {
        this.processingMode = processingMode;
    }

    public long getResponseTime() {
        return responseTime;
    }

    public void setResponseTime(long responseTime) {
        this.responseTime = responseTime;
    }

    public LocalDateTime getDateTime() {
        return dateTime;
    }

    public void setDateTime(LocalDateTime dateTime) {
        this.dateTime = dateTime;
    }

    public boolean isBankCalled() {
        return bankCalled;
    }

    public void setBankCalled(boolean bankCalled) {
        this.bankCalled = bankCalled;
    }

    public boolean isAuthorized() {
        return authorized;
    }

    public void setAuthorized(boolean authorized) {
        this.authorized = authorized;
    }

    public Optional<Long> getAuthorId() {
        return authorId;
    }

    public void setAuthorId(Optional<Long> authorId) {
        this.authorId = authorId;
    }
}
